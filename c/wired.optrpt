Begin optimization report for: zeros

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at wired.c (14, 5)
<Remainder loop>
LOOP END
=================================================================

Begin optimization report for: createnodes

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (28, 5)
<Multiversioned v2>
    remark #15319: Loop was not vectorized: novector directive used
LOOP END

LOOP BEGIN at wired.c (28, 5)
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 16
LOOP END

LOOP BEGIN at wired.c (28, 5)
<Multiversioned v1>
<Multiversioned v1>
    remark #25228: Loop multiversioned for Data Dependence
    remark #25408: memset generated
    remark #25562: The loop has been multiversioned for the small trip count
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 8
LOOP END

LOOP BEGIN at wired.c (28, 5)
<Remainder loop for vectorization>
    remark #15440: remainder loop was vectorized (masked)
    remark #15305: vectorization support: vector length 8
    remark #25261: Single iteration loop optimized away
LOOP END
=================================================================

Begin optimization report for: free2darray

LOOP BEGIN at wired.c (41, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at wired.c (41, 5)
<Remainder loop>
LOOP END
=================================================================

Begin optimization report for: normcols

LOOP BEGIN at wired.c (51, 5)
<Multiversioned v2>
    remark #15319: Loop was not vectorized: novector directive used
LOOP END

LOOP BEGIN at wired.c (51, 5)
<Multiversioned v1>
    remark #25228: Loop multiversioned for Data Dependence
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 8
LOOP END

LOOP BEGIN at wired.c (51, 5)
<Remainder loop for vectorization>
    remark #15440: remainder loop was vectorized (masked)
    remark #15305: vectorization support: vector length 8
    remark #25261: Single iteration loop optimized away
LOOP END
=================================================================

Begin optimization report for: crosscols

LOOP BEGIN at wired.c (60, 5)
<Multiversioned v2>
    remark #15319: Loop was not vectorized: novector directive used
LOOP END

LOOP BEGIN at wired.c (60, 5)
<Multiversioned v1>
    remark #25228: Loop multiversioned for Data Dependence
    remark #25563: Load hoisted out of the loop
    remark #25563: Load hoisted out of the loop
    remark #25563: Load hoisted out of the loop
    remark #25583: Number of Array Refs Scalar Replaced In Loop: 3
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 8
LOOP END

LOOP BEGIN at wired.c (60, 5)
<Remainder loop for vectorization>
    remark #15440: remainder loop was vectorized (masked)
    remark #15305: vectorization support: vector length 8
    remark #25261: Single iteration loop optimized away
LOOP END
=================================================================

Begin optimization report for: createsources

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at wired.c (14, 5)
<Remainder loop>
LOOP END

LOOP BEGIN at wired.c (80, 5)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed OUTPUT dependence
    remark #15346: vector dependence: assumed OUTPUT dependence
    remark #15346: vector dependence: assumed OUTPUT dependence
    remark #15346: vector dependence: assumed OUTPUT dependence
    remark #15346: vector dependence: assumed OUTPUT dependence
    remark #15346: vector dependence: assumed OUTPUT dependence
    remark #15346: vector dependence: assumed OUTPUT dependence
    remark #25439: Loop unrolled with remainder by 4
LOOP END

LOOP BEGIN at wired.c (80, 5)
<Remainder loop>
LOOP END
=================================================================

Begin optimization report for: solve2

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (41, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (41, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (41, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END

LOOP BEGIN at wired.c (113, 5)
<Predicate Optimized v2>
    remark #15541: loop was not vectorized: outer loop is not an auto-vectorization candidate.
LOOP END

LOOP BEGIN at wired.c (113, 5)
<Predicate Optimized v1>
    remark #25423: Invariant If condition at lines 121, 121, and 121 hoisted out of this loop
    remark #15541: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at wired.c (121, 9)
    <Multiversioned v2>
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 3
        remark #15319: Loop was not vectorized: novector directive used
    LOOP END

    LOOP BEGIN at wired.c (121, 9)
    <Multiversioned v1>
        remark #25228: Loop multiversioned for Data Dependence
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25563: Load hoisted out of the loop
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 3
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 8
    LOOP END

    LOOP BEGIN at wired.c (121, 9)
    <Remainder loop for vectorization>
        remark #15440: remainder loop was vectorized (masked)
        remark #15305: vectorization support: vector length 8
        remark #25261: Single iteration loop optimized away
    LOOP END

    LOOP BEGIN at wired.c (60, 5)
    <Multiversioned v2>
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 3
        remark #15319: Loop was not vectorized: novector directive used
    LOOP END

    LOOP BEGIN at wired.c (60, 5)
    <Multiversioned v1>
        remark #25228: Loop multiversioned for Data Dependence
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 3
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 8
    LOOP END

    LOOP BEGIN at wired.c (60, 5)
    <Remainder loop for vectorization>
        remark #15440: remainder loop was vectorized (masked)
        remark #15305: vectorization support: vector length 8
        remark #25261: Single iteration loop optimized away
    LOOP END

    LOOP BEGIN at wired.c (51, 5)
        remark #25045: Fused Loops: 51,51,140,51,136,144
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 5
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 8
    LOOP END

    LOOP BEGIN at wired.c (51, 5)
    <Remainder loop for vectorization>
        remark #15440: remainder loop was vectorized (masked)
        remark #15305: vectorization support: vector length 8
        remark #25261: Single iteration loop optimized away
    LOOP END

    LOOP BEGIN at wired.c (51, 5)
        remark #25046: Loop lost in Fusion
    LOOP END

    LOOP BEGIN at wired.c (140, 9)
        remark #25046: Loop lost in Fusion
    LOOP END

    LOOP BEGIN at wired.c (51, 5)
        remark #25046: Loop lost in Fusion
    LOOP END

    LOOP BEGIN at wired.c (136, 9)
        remark #25046: Loop lost in Fusion
    LOOP END

    LOOP BEGIN at wired.c (144, 9)
        remark #25046: Loop lost in Fusion
    LOOP END

    LOOP BEGIN at wired.c (148, 9)
    <Multiversioned v2>
        remark #15319: Loop was not vectorized: novector directive used
    LOOP END

    LOOP BEGIN at wired.c (148, 9)
    <Multiversioned v1>
        remark #25228: Loop multiversioned for Data Dependence
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 8
    LOOP END

    LOOP BEGIN at wired.c (148, 9)
    <Remainder loop for vectorization>
        remark #15440: remainder loop was vectorized (masked)
        remark #15305: vectorization support: vector length 8
        remark #25261: Single iteration loop optimized away
    LOOP END
LOOP END
=================================================================

Begin optimization report for: partition
=================================================================

Begin optimization report for: solve3

LOOP BEGIN at wired.c (14, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 3
LOOP END
=================================================================

Begin optimization report for: solve3.extracted
=================================================================

Begin optimization report for: solve3.extracted.11

LOOP BEGIN at wired.c (41, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 7
LOOP END

LOOP BEGIN at wired.c (211, 9)

    LOOP BEGIN at wired.c (211, 9)
        remark #30002: OpenMP: Worksharing loop
        remark #15527: Loop was not vectorized: function call to  cannot be vectorized
        remark #25439: Loop unrolled with remainder by 8
    LOOP END

    LOOP BEGIN at wired.c (211, 9)
    <Remainder loop>
    LOOP END
LOOP END

LOOP BEGIN at wired.c (216, 9)
    remark #30002: OpenMP: Worksharing loop

    LOOP BEGIN at wired.c (14, 5)
        remark #15527: Loop was not vectorized: function call to  cannot be vectorized
        remark #25439: Loop unrolled with remainder by 8
    LOOP END

    LOOP BEGIN at wired.c (14, 5)
    <Remainder loop>
    LOOP END

    LOOP BEGIN at wired.c (225, 13)
        remark #15541: loop was not vectorized: outer loop is not an auto-vectorization candidate.

        LOOP BEGIN at wired.c (227, 17)
            remark #15344: Loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between [ /home/ryan/GitHub/wired-benchmarks/c/wired.c (228, 21) ] and [ /home/ryan/GitHub/wired-benchmarks/c/wired.c (228, 47) ] 
            remark #25436: Loop completely unrolled by 7
        LOOP END
    LOOP END

    LOOP BEGIN at wired.c (238, 17)
        remark #15541: loop was not vectorized: outer loop is not an auto-vectorization candidate.

        LOOP BEGIN at wired.c (239, 21)
        <Multiversioned v2>
            remark #15319: Loop was not vectorized: novector directive used
        LOOP END

        LOOP BEGIN at wired.c (239, 21)
        <Multiversioned v1>
            remark #25228: Loop multiversioned for Data Dependence
            remark #15300: LOOP WAS VECTORIZED
            remark #15305: vectorization support: vector length 8
        LOOP END

        LOOP BEGIN at wired.c (239, 21)
        <Remainder loop for vectorization>
            remark #15440: remainder loop was vectorized (masked)
            remark #15305: vectorization support: vector length 8
            remark #25261: Single iteration loop optimized away
        LOOP END
    LOOP END
LOOP END
=================================================================

---- Begin Inlining Report ----
Option Values:
  inline-threshold: 225
  inlinehint-threshold: 325
  inlinecold-threshold: 45
  inlineoptsize-threshold: 15

COMPILE FUNC: zeros
   -> DELETE: calloc wired.c(15,20)

COMPILE FUNC: createnodes
   -> INLINE: zeros wired.c(26,22)
      -> DELETE: calloc wired.c(15,20)

COMPILE FUNC: free2darray
   -> DELETE: free wired.c(42,9)

COMPILE FUNC: normcols

COMPILE FUNC: crosscols

COMPILE FUNC: createsources
   -> INLINE: zeros wired.c(72,24)
      -> DELETE: calloc wired.c(15,20)

COMPILE FUNC: solve2
   -> INLINE: zeros wired.c(98,23)
      -> DELETE: calloc wired.c(15,20)
   -> DELETE: calloc wired.c(100,17)
   -> INLINE: zeros wired.c(101,18)
      -> DELETE: calloc wired.c(13,13)
      -> DELETE: calloc wired.c(15,20)
      -> DELETE: calloc wired.c(13,13)
   -> INLINE: zeros wired.c(102,18)
      -> DELETE: calloc wired.c(13,13)
      -> DELETE: calloc wired.c(15,20)
      -> DELETE: calloc wired.c(13,13)
   -> INLINE: zeros wired.c(103,20)
      -> DELETE: calloc wired.c(13,13)
      -> DELETE: calloc wired.c(15,20)
      -> DELETE: calloc wired.c(13,13)
   -> DELETE: free wired.c(155,5)
   -> INLINE: free2darray wired.c(156,5)
      -> DELETE: free wired.c(45,5)
      -> DELETE: free wired.c(42,9)
      -> DELETE: free wired.c(45,5)
   -> INLINE: free2darray wired.c(157,5)
      -> DELETE: free wired.c(45,5)
      -> DELETE: free wired.c(42,9)
      -> DELETE: free wired.c(45,5)
   -> INLINE: free2darray wired.c(158,5)
      -> DELETE: free wired.c(45,5)
      -> DELETE: free wired.c(42,9)
   -> INLINE: crosscols wired.c(131,9)
   -> INLINE: normcols wired.c(132,9)
   -> INLINE: normcols wired.c(133,9)
   -> INLINE: normcols wired.c(134,9)

COMPILE FUNC: partition

COMPILE FUNC: solve3
   -> INLINE: zeros wired.c(197,23)
      -> DELETE: calloc wired.c(15,20)
   -> INLINE: zeros wired.c(198,31)
      -> DELETE: calloc wired.c(13,13)
      -> DELETE: calloc wired.c(15,20)
   -> INLINE: zeros wired.c(199,32)
      -> DELETE: calloc wired.c(13,13)
      -> DELETE: calloc wired.c(15,20)
   -> INLINE: partition wired.c(213,17)
   -> INLINE: partition wired.c(218,13)
   -> INLINE: zeros wired.c(222,40)
   -> INLINE: free2darray wired.c(234,13)
   -> BROKER: __kmpc_fork_call wired.c(203,5)(solve3.extracted)
   -> BROKER: __kmpc_fork_call wired.c(209,5)(solve3.extracted.11)

COMPILE FUNC: solve3.extracted

COMPILE FUNC: solve3.extracted.11
   -> INLINE: zeros wired.c(222,40)
      -> DELETE: calloc wired.c(15,20)
   -> DELETE: solve2 wired.c(233,30)
   -> INLINE: free2darray wired.c(234,13)
      -> DELETE: free wired.c(42,9)
   -> DELETE: __kmpc_dispatch_fini_4
   -> solve2 wired.c(233,30)

---- End Inlining Report ------
Register allocation report for: zeros
FUNCTION BEGIN
 LOOP1 BEGIN at (wired.c:14:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:14:5)
 LOOP1 END

Hardware registers used
 Reserved : 2 [ rsp ssp  ]
 Available : 42 [ rcx rdx r8 r9 r10 r11 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 6 [ rbp rbx r12 r13 r14 r15  ]
 Assigned : 10 [ eflags rax rbp rbx rdi rsi r12 r13 r14 r15  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: createnodes
FUNCTION BEGIN
 LOOP1 BEGIN at (wired.c:28:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:28:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:28:5)
 LOOP1 END

Hardware registers used
 Reserved : 3 [ rsp ssp rip  ]
 Available : 29 [ r11 r13 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k4_k5 k6_k7  ]
 Callee Saved : 4 [ r12 r15 rbx r14  ]
 Assigned : 23 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r10 r12 r14 r15 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 k0_k1 k2_k3  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: free2darray
FUNCTION BEGIN
 LOOP1 BEGIN at (wired.c:41:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:41:5)
 LOOP1 END

Hardware registers used
 Reserved : 2 [ rsp ssp  ]
 Available : 45 [ rax rbp rcx rdx r8 r9 r10 r11 r13 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 4 [ rbx r14 r15 r12  ]
 Assigned : 7 [ eflags rbx rdi rsi r12 r14 r15  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: normcols
FUNCTION BEGIN
 LOOP1 BEGIN at (wired.c:51:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:51:5)
 LOOP1 END

Hardware registers used
 Reserved : 2 [ rip mxcsr  ]
 Available : 37 [ r12 r13 r14 r15 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 0 [  ]
 Assigned : 15 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r10 r11 zmm0 zmm1 k0_k1  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: crosscols
FUNCTION BEGIN
 6 reloads 10 spills 
 LOOP1 BEGIN at (wired.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:60:5)
 LOOP1 END

Hardware registers used
 Reserved : 2 [ rip mxcsr  ]
 Available : 28 [ zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 3 [ r14 r13 r15  ]
 Assigned : 24 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r10 r11 r12 r13 r14 r15 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 k0_k1  ]

Routine stack 
 Variables : 8 Bytes
   Read Count : 8
   Write Count : 10
 Spills : 10 Bytes
   Read Count : 6
   Write Count : 10

FUNCTION END
Register allocation report for: createsources
FUNCTION BEGIN
 LOOP1 BEGIN at (wired.c:80:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:80:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:14:5 @[ wired.c:72:24 ])
 LOOP1 END
 LOOP1 BEGIN at (wired.c:14:5 @[ wired.c:72:24 ])
 LOOP1 END

Hardware registers used
 Reserved : 4 [ rsp ssp rip mxcsr  ]
 Available : 38 [ rbp r8 r9 r10 r11 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 5 [ rbx r12 r13 r14 r15  ]
 Assigned : 14 [ eflags rax rbx rcx rdi rdx rsi r12 r13 r14 r15 zmm0 zmm1 zmm2  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: solve2
FUNCTION BEGIN
 34 reloads 28 spills 
 LOOP1 BEGIN at (wired.c:113:5)
  68 reloads 1 spills 
  LOOP2 BEGIN at (wired.c:121:9)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:121:9)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:60:5 @[ wired.c:131:9 ])
  LOOP2 END
  LOOP2 BEGIN at (wired.c:60:5 @[ wired.c:131:9 ])
  LOOP2 END
  LOOP2 BEGIN at (wired.c:51:5 @[ wired.c:132:9 ])
   3 reloads 
  LOOP2 END
  LOOP2 BEGIN at (wired.c:148:9)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:148:9)
  LOOP2 END
 LOOP1 END
 LOOP1 BEGIN at (wired.c:113:5)
 LOOP1 END
 LOOP1 BEGIN at (wired.c:113:5)
 LOOP1 END

Hardware registers used
 Reserved : 4 [ rsp ssp rip mxcsr  ]
 Available : 16 [ zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 6 [ rbp rbx r12 r13 r14 r15  ]
 Assigned : 36 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r10 r11 r12 r13 r14 r15 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 k0_k1  ]

Routine stack 
 Variables : 194 Bytes
   Read Count : 105
   Write Count : 29
 Spills : 207 Bytes
   Read Count : 105
   Write Count : 29

FUNCTION END
Register allocation report for: partition
FUNCTION BEGIN

Hardware registers used
 Reserved : 0 [  ]
 Available : 45 [ rbp rbx r9 r10 r11 r12 r13 r14 r15 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 0 [  ]
 Assigned : 7 [ eflags rax rcx rdi rdx rsi r8  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: solve3
FUNCTION BEGIN

Hardware registers used
 Reserved : 2 [ rsp ssp  ]
 Available : 37 [ r13 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 4 [ r15 r14 rbx r12  ]
 Assigned : 15 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r10 r11 r12 r14 r15  ]

Routine stack 
 Variables : 4 Bytes
   Read Count : 1
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: solve3.extracted
FUNCTION BEGIN

Hardware registers used
 Reserved : 2 [ rsp ssp  ]
 Available : 48 [ rbp rcx rdi rsi r8 r9 r10 r11 r12 r13 r14 r15 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 1 [ rbx  ]
 Assigned : 4 [ rbx rdx eflags rax  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: solve3.extracted.11
FUNCTION BEGIN
 6 reloads 12 spills 
 LOOP1 BEGIN at (wired.c:216:9)
  18 reloads 4 spills 
  LOOP2 BEGIN at (wired.c:14:5 @[ wired.c:222:40 ])
  LOOP2 END
  LOOP2 BEGIN at (wired.c:14:5 @[ wired.c:222:40 ])
  LOOP2 END
  LOOP2 BEGIN at (wired.c:225:13)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:239:21)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:239:21)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:239:21)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:239:21)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:239:21)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:239:21)
  LOOP2 END
 LOOP1 END
 LOOP1 BEGIN at (wired.c:211:9)
  LOOP2 BEGIN at (wired.c:211:9)
  LOOP2 END
  LOOP2 BEGIN at (wired.c:211:9)
  LOOP2 END
 LOOP1 END

Hardware registers used
 Reserved : 4 [ rsp ssp rip mxcsr  ]
 Available : 35 [ r10 r11 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 6 [ rbp rbx r12 r13 r14 r15  ]
 Assigned : 17 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r12 r13 r14 r15 zmm0 zmm1 k0_k1  ]

Routine stack 
 Variables : 152 Bytes
   Read Count : 32
   Write Count : 24
 Spills : 104 Bytes
   Read Count : 24
   Write Count : 16

FUNCTION END
