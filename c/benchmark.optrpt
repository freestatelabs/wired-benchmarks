Begin optimization report for: main

LOOP BEGIN at benchmark.c (77, 5)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25436: Loop completely unrolled by 10

    LOOP BEGIN at benchmark.c (78, 9)
        remark #25436: Loop completely unrolled by 3
    LOOP END
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Predicate Optimized v1>
    remark #25580: Induction variable range split using condition at line 68
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Remainder loop>
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Predicate Optimized v2>
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Remainder loop>
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Predicate Optimized v1>
    remark #25580: Induction variable range split using condition at line 68
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Remainder loop>
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Predicate Optimized v2>
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at benchmark.c (60, 5)
<Remainder loop>
LOOP END
=================================================================

Begin optimization report for: main.extracted

LOOP BEGIN at benchmark.c (47, 5)

    LOOP BEGIN at benchmark.c (47, 5)
        remark #30002: OpenMP: Worksharing loop
    LOOP END
LOOP END
=================================================================

---- Begin Inlining Report ----
Option Values:
  inline-threshold: 225
  inlinehint-threshold: 325
  inlinecold-threshold: 45
  inlineoptsize-threshold: 15

DEAD STATIC FUNC: atoi

COMPILE FUNC: main
   -> INLINE: atoi benchmark.c(24,14)
   -> INLINE: atoi benchmark.c(25,14)
   -> INLINE: atoi benchmark.c(26,14)
   -> INLINE: atoi benchmark.c(27,14)
   -> DELETE: solve3 benchmark.c(62,22)
   -> DELETE: solve2 benchmark.c(65,22)
   -> DELETE: free2darray benchmark.c(69,13)
   -> DELETE: putchar benchmark.c(81,9)
   -> DELETE: printf benchmark.c(79,13)
   -> BROKER: __kmpc_fork_call benchmark.c(46,5)(main.extracted)
   -> DELETE: solve3 benchmark.c(62,22)
   -> DELETE: free2darray benchmark.c(69,13)

COMPILE FUNC: main.extracted

---- End Inlining Report ------
Register allocation report for: main
FUNCTION BEGIN
 10 reloads 4 spills 
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END
 LOOP1 BEGIN at (benchmark.c:60:5)
 LOOP1 END

Hardware registers used
 Reserved : 3 [ mxcsr rsp ssp  ]
 Available : 38 [ r8 r9 r10 r11 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 6 [ rbp rbx r12 r13 r14 r15  ]
 Assigned : 14 [ eflags rax rbp rbx rcx rdi rdx rsi r12 r13 r14 r15 zmm0 zmm1  ]

Routine stack 
 Variables : 28 Bytes
   Read Count : 12
   Write Count : 7
 Spills : 32 Bytes
   Read Count : 10
   Write Count : 4

FUNCTION END
Register allocation report for: main.extracted
FUNCTION BEGIN
 LOOP1 BEGIN at (benchmark.c:47:5)
  LOOP2 BEGIN at (benchmark.c:47:5)
  LOOP2 END
 LOOP1 END

Hardware registers used
 Reserved : 2 [ rsp ssp  ]
 Available : 38 [ r10 r11 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 4 [ rbx r15 r12 r13  ]
 Assigned : 14 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r12 r13 r14 r15  ]

Routine stack 
 Variables : 16 Bytes
   Read Count : 2
   Write Count : 4
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
